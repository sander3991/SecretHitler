<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gamePanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>